// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  output          = "./generated/client"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model BlogPosts {
  id         String    @id @default(uuid())
  title      String
  slug       String
  stage      Stage
  coverImage String
  content    String    @db.LongText
  categoryId String
  date       DateTime?
  excerpt    String?
  deleted    Boolean   @default(false)

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  publishedAt DateTime?
  Comments    Comments[]
}

enum Stage {
  PUBLISHED
  DRAFT
}

model Plans {
  id    String  @id @default(uuid())
  title String
  slug  String?

  Subscription Subscriptions[]
}

model Subscriptions {
  id       String  @id @default(uuid())
  plan     Plans   @relation(fields: [planId], references: [id])
  planId   String
  user     Users   @relation(fields: [usersId], references: [id])
  usersId  String
  isActive Boolean @default(false)

  @@index([planId])
  @@index([usersId])
}

model Comments {
  id          Int       @id @default(autoincrement())
  content     String    @db.Text
  blogPost    BlogPosts @relation(fields: [blogPostsId], references: [id])
  blogPostsId String
  user        Users     @relation(fields: [userId], references: [id])
  userId      String

  parent   Comments?  @relation("BlogPost_Comment_Children", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Children Comments[] @relation("BlogPost_Comment_Children")
  parentId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([blogPostsId])
  @@index([parentId])
  @@index([userId])
}

model Users {
  id                String  @id @default(uuid())
  externalId        String?
  email             String
  first_name        String
  last_name         String?
  username          String
  profile_image_url String
  deleted           Boolean @default(false)

  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  Comments     Comments[]
  Subscription Subscriptions[]
}
